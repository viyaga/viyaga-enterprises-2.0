/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    categories: Category;
    tags: Tag;
    products: Product;
    orders: Order;
    'bank-details': BankDetail;
    'affiliate-commission-settings': AffiliateCommissionSetting;
    'affiliate-commissions': AffiliateCommission;
    seo: Seo;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    tags: TagsSelect<false> | TagsSelect<true>;
    products: ProductsSelect<false> | ProductsSelect<true>;
    orders: OrdersSelect<false> | OrdersSelect<true>;
    'bank-details': BankDetailsSelect<false> | BankDetailsSelect<true>;
    'affiliate-commission-settings': AffiliateCommissionSettingsSelect<false> | AffiliateCommissionSettingsSelect<true>;
    'affiliate-commissions': AffiliateCommissionsSelect<false> | AffiliateCommissionsSelect<true>;
    seo: SeoSelect<false> | SeoSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  /**
   * Defines the access level and permissions of the user.
   */
  role?: ('admin' | 'affiliate' | 'customer') | null;
  /**
   * Please enter your full legal name.
   */
  name: string;
  /**
   * Auto-generated unique code used for referring others.
   */
  referralCode: string;
  /**
   * Fill in your complete residential address.
   */
  address?: {
    houseNumber?: string | null;
    streetAndArea?: string | null;
    city?: string | null;
    state?: string | null;
    postalCode?: string | null;
    country?: string | null;
  };
  /**
   * Total earnings accumulated through referrals.
   */
  total_earned?: number | null;
  /**
   * Funds currently available in the user’s wallet.
   */
  wallet_balance?: number | null;
  /**
   * Extra bonuses rewarded for performance or campaigns.
   */
  bonus_balance?: number | null;
  /**
   * User’s current referral rank or status.
   */
  current_rank?: string | null;
  /**
   * Tracks the chain of referrers above this user.
   */
  referral_tree_ids?:
    | {
        id?: string | null;
      }[]
    | null;
  /**
   * Referral code of the person who invited this user.
   */
  referred_by?: (string | null) | User;
  /**
   * Linked bank account(s) for payouts.
   */
  bank_accounts?: (string | BankDetail)[] | null;
  /**
   * Used by admins to manage account visibility.
   */
  status: '1' | '0' | '-1';
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "bank-details".
 */
export interface BankDetail {
  id: string;
  user: string | User;
  account_holder_name: string;
  bank_name: string;
  /**
   * Alphanumeric account number (5–34 characters)
   */
  account_number: string;
  /**
   * Indian Financial System Code (e.g., SBIN0001234)
   */
  ifsc_code?: string | null;
  /**
   * IBAN — required for European accounts
   */
  iban?: string | null;
  /**
   * 8 or 11 character SWIFT/BIC code (e.g., CHASUS33XXX)
   */
  swift_code: string;
  bank_country: string;
  /**
   * Full bank branch address for verification
   */
  bank_address?: string | null;
  currency: string;
  /**
   * Mark as primary payout account
   */
  is_primary?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt?: string | null;
  uploaded_by?: (string | null) | User;
  prefix?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: string;
  title: string;
  slug: string;
  description?: string | null;
  icon?: (string | null) | Media;
  seo?: (string | null) | Seo;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "seo".
 */
export interface Seo {
  id: string;
  metaTitle: string;
  metaDescription: string;
  metaKeywords?: string | null;
  ogTitle?: string | null;
  ogDescription?: string | null;
  ogImage?: (string | null) | Media;
  twitterTitle?: string | null;
  twitterDescription?: string | null;
  twitterImage?: (string | null) | Media;
  canonicalUrl?: string | null;
  structuredData?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tags".
 */
export interface Tag {
  id: string;
  name: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products".
 */
export interface Product {
  id: string;
  thumbnail?: (string | null) | Media;
  title: string;
  slug: string;
  price: number;
  discount_price: number;
  inr_price: number;
  inr_discount_price: number;
  isFeatured?: boolean | null;
  isFree?: boolean | null;
  category?: (string | Category)[] | null;
  tags?: (string | Tag)[] | null;
  affiliateCommission?: number | null;
  screenshots?:
    | {
        image?: (string | null) | Media;
        id?: string | null;
      }[]
    | null;
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  features?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  demo_urls?:
    | {
        label: string;
        url: string;
        id?: string | null;
      }[]
    | null;
  seo?: (string | null) | Seo;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders".
 */
export interface Order {
  id: string;
  productTitle: string;
  productThumbnail?: (string | null) | Media;
  currency: 'USD' | 'INR';
  originalPrice: number;
  discountedPrice: number;
  subtotal: number;
  taxes: number;
  total: number;
  paymentMethod: 'card' | 'paypal' | 'bank transfer';
  countryCode?: string | null;
  billingDetails: {
    fullName: string;
    email: string;
    phone: string;
    address: string;
    city: string;
    state: string;
    postalCode: string;
    country: string;
  };
  paymentStatus?: ('pending' | 'awaiting verification' | 'paid' | 'failed' | 'refunded') | null;
  orderStatus: 'pending' | 'processing' | 'completed' | 'on_hold' | 'cancelled';
  referralCode: string;
  affiliate: {
    paymentStatus: 'pending' | 'paid' | 'failed';
    commissionPercentage: number;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "affiliate-commission-settings".
 */
export interface AffiliateCommissionSetting {
  id: string;
  name: string;
  description?: string | null;
  tier1: number;
  tier2: number;
  tier3: number;
  isActive?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "affiliate-commissions".
 */
export interface AffiliateCommission {
  id: string;
  order: string | Order;
  affiliateUser: string | User;
  commissionAmount: number;
  commissionCurrency: 'USD' | 'INR';
  commissionPercentage: number;
  tier: '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | '10';
  paymentStatus: 'pending' | 'paid' | 'failed';
  /**
   * Optional notes about this commission payment.
   */
  notes?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'categories';
        value: string | Category;
      } | null)
    | ({
        relationTo: 'tags';
        value: string | Tag;
      } | null)
    | ({
        relationTo: 'products';
        value: string | Product;
      } | null)
    | ({
        relationTo: 'orders';
        value: string | Order;
      } | null)
    | ({
        relationTo: 'bank-details';
        value: string | BankDetail;
      } | null)
    | ({
        relationTo: 'affiliate-commission-settings';
        value: string | AffiliateCommissionSetting;
      } | null)
    | ({
        relationTo: 'affiliate-commissions';
        value: string | AffiliateCommission;
      } | null)
    | ({
        relationTo: 'seo';
        value: string | Seo;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  role?: T;
  name?: T;
  referralCode?: T;
  address?:
    | T
    | {
        houseNumber?: T;
        streetAndArea?: T;
        city?: T;
        state?: T;
        postalCode?: T;
        country?: T;
      };
  total_earned?: T;
  wallet_balance?: T;
  bonus_balance?: T;
  current_rank?: T;
  referral_tree_ids?:
    | T
    | {
        id?: T;
      };
  referred_by?: T;
  bank_accounts?: T;
  status?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  uploaded_by?: T;
  prefix?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  description?: T;
  icon?: T;
  seo?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tags_select".
 */
export interface TagsSelect<T extends boolean = true> {
  name?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products_select".
 */
export interface ProductsSelect<T extends boolean = true> {
  thumbnail?: T;
  title?: T;
  slug?: T;
  price?: T;
  discount_price?: T;
  inr_price?: T;
  inr_discount_price?: T;
  isFeatured?: T;
  isFree?: T;
  category?: T;
  tags?: T;
  affiliateCommission?: T;
  screenshots?:
    | T
    | {
        image?: T;
        id?: T;
      };
  description?: T;
  features?: T;
  demo_urls?:
    | T
    | {
        label?: T;
        url?: T;
        id?: T;
      };
  seo?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders_select".
 */
export interface OrdersSelect<T extends boolean = true> {
  productTitle?: T;
  productThumbnail?: T;
  currency?: T;
  originalPrice?: T;
  discountedPrice?: T;
  subtotal?: T;
  taxes?: T;
  total?: T;
  paymentMethod?: T;
  countryCode?: T;
  billingDetails?:
    | T
    | {
        fullName?: T;
        email?: T;
        phone?: T;
        address?: T;
        city?: T;
        state?: T;
        postalCode?: T;
        country?: T;
      };
  paymentStatus?: T;
  orderStatus?: T;
  referralCode?: T;
  affiliate?:
    | T
    | {
        paymentStatus?: T;
        commissionPercentage?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "bank-details_select".
 */
export interface BankDetailsSelect<T extends boolean = true> {
  user?: T;
  account_holder_name?: T;
  bank_name?: T;
  account_number?: T;
  ifsc_code?: T;
  iban?: T;
  swift_code?: T;
  bank_country?: T;
  bank_address?: T;
  currency?: T;
  is_primary?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "affiliate-commission-settings_select".
 */
export interface AffiliateCommissionSettingsSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  tier1?: T;
  tier2?: T;
  tier3?: T;
  isActive?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "affiliate-commissions_select".
 */
export interface AffiliateCommissionsSelect<T extends boolean = true> {
  order?: T;
  affiliateUser?: T;
  commissionAmount?: T;
  commissionCurrency?: T;
  commissionPercentage?: T;
  tier?: T;
  paymentStatus?: T;
  notes?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "seo_select".
 */
export interface SeoSelect<T extends boolean = true> {
  metaTitle?: T;
  metaDescription?: T;
  metaKeywords?: T;
  ogTitle?: T;
  ogDescription?: T;
  ogImage?: T;
  twitterTitle?: T;
  twitterDescription?: T;
  twitterImage?: T;
  canonicalUrl?: T;
  structuredData?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}